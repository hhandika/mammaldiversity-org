---
import Icons from "./Icons.astro";
import OpenMenuButton from "./buttons/OpenMenuButton.astro";
import CloseMenuButton from "./buttons/CloseMenuButton.astro";
import cntl from "cntl";

const navItems = [
  { path: "/", label: "Home" },
  { path: "/explore", label: "Explore" },
  { path: "/search", label: "Search" },
  { path: "/resources", label: "Resources" },
  { path: "/about", label: "About" },
];

const currentPath = Astro.url.pathname;

const navClasses = cntl`
  flex
  items-center
  justify-between
  p-6
  lg:px-8
`;

const largeNavClasses = cntl`
  grid-cols-5
  justify-items-center
  hidden
  lg:flex
  lg:gap-x-12
  mx-auto
  bg-spicy-mix-200
  py-2
  px-8
  dark:bg-spicy-mix-800
  rounded-full
`;

const closeMenuButtonClasses = cntl`
  fixed
  bg-spicy-mix-100
  dark:bg-spicy-mix-800
  inset-y-0
  right-0
  z-50
  w-full
  overflow-y-auto
  px-6
  py-6
  sm:max-w-sm
  sm:ring-1
  sm:ring-gray-900/10
`;

const navColorClasses = cntl`
  text-spicy-mix-900
  dark:text-spicy-mix-50
  hover:text-spicy-mix-700
  dark:hover:text-spicy-mix-200
`;

const navItemClasses = cntl`
  mx-2
  my-2
  font-semibold
  ${navColorClasses}
  rounded-xl
  px-2
`;

const mobileItemClasses = cntl`
  block
  rounded-lg
  px-3
  py-2
  ${navColorClasses}
`;

const navIndicatorColorClasses = cntl`
  bg-spicy-mix-800
  dark:bg-spicy-mix-50
  hover:bg-spicy-mix-700
  dark:hover:bg-spicy-mix-200
`;

const indicatorClasses = cntl`
  h-1
  w-1/6
  mx-auto
  rounded-full
  bg-transparent
`;
---

<nav class={navClasses} aria-label="Global">
  <div class="flex lg:flex-1">
    <a href="/" class="-m-1.5 p-1.5">
      <span class="sr-only">MDD</span>
    </a>
    <Icons />
  </div>
  <div class="flex lg:hidden">
    <OpenMenuButton />
  </div>
  <div class={largeNavClasses}>
    {
      navItems.map(({ path, label }) => (
        <div class="text-center">
          <a href={path} class={navItemClasses}>
            {label}
          </a>
          <div
            class={`${indicatorClasses} ${currentPath === path || currentPath === `${path}/` ? `${navIndicatorColorClasses}` : ""}`}
          />
        </div>
      ))
    }
  </div>
</nav>
<!-- Mobile menu, show/hide based on menu open state. -->
<div id="mobile-menu" class="lg:hidden hidden" role="dialog" aria-modal="true">
  <!-- Background backdrop, show/hide based on slide-over state. -->
  <div class="fixed inset-0 z-50">
    <div id="close-button" class={closeMenuButtonClasses}>
      <div class="flex items-center justify-between">
        <a href="/" class="-m-1.5 p-1.5">
          <span class="sr-only">MDD</span>
          <Icons />
        </a>
        <CloseMenuButton />
      </div>
      <div class="mt-6 flow-root">
        <div class="-my-6 divide-y divide-gray-500/10">
          <div class="space-y-2 py-6 font-semibold">
            {
              navItems.map(({ path, label }) => (
                <>
                  <div class="flex items-center space-x-2">
                    <div
                      class={`w-2 h-2 rounded-full bg-transparent -mr-2 ml-2 ${currentPath === path || currentPath === `${path}/` ? `${navIndicatorColorClasses}` : ""}`}
                    />
                    <a href={path} class={mobileItemClasses}>
                      {label}
                    </a>
                  </div>
                </>
              ))
            }
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  const menuButton = document.getElementById("menu-button");
  const closeButton = document.getElementById("close-button");
  const mobileMenu = document.getElementById("mobile-menu");

  if (menuButton && mobileMenu) {
    menuButton.addEventListener("click", function () {
      mobileMenu.classList.toggle("hidden");
    });
  }

  if (closeButton && mobileMenu) {
    closeButton.addEventListener("click", function () {
      mobileMenu.classList.toggle("hidden");
    });
  }
</script>
