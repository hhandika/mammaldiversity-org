---
interface SynonymsProps {
  rootName: string;
  originalNameCombination?: string;
  species: string;
  authoritySpeciesAuthor: string;
  authoritySpeciesYear: number;
  authorityParentheses: number;
}

const {
  rootName,
  originalNameCombination,
  species,
  authoritySpeciesAuthor,
  authoritySpeciesYear,
  authorityParentheses,
} = Astro.props as SynonymsProps;

const synonymText = originalNameCombination
  ? originalNameCombination
  : `${species} ${rootName}`;
const authority = `${authoritySpeciesAuthor}, ${authoritySpeciesYear}`;
const authorityText = authorityParentheses === 1 ? `(${authority})` : authority;
---

<button id="modal-btn" onclick="my_modal_5.showModal()">
  <div
    class="w-fit rounded-full p-2 mr-4 border-2 hover:bg-spectra-50 dark:hover:bg-spectra-950 border-spectra-700 dark:border-spectra-300"
  >
    <p class="text-sm text-spectra-700 dark:text-spectra-300">
      <span class="italic">{synonymText}</span>
      {authorityText}
    </p>
  </div>
</button>

<dialog id="my_modal_5" class="modal modal-bottom sm:modal-middle">
  <div class="modal-box">
    <h3 class="text-lg font-bold">Hello!</h3>
    <p class="py-4">Press ESC key or click the button below to close</p>
    <div class="modal-action">
      <form method="dialog">
        <!-- if there is a button in form, it will close the modal -->
        <button class="btn">Close</button>
      </form>
    </div>
  </div>
</dialog>

<script>
  const dialog = document.querySelector("#my_modal_5") as HTMLDialogElement;
  const modalBtn = document.querySelectorAll("#modal-btn");

  modalBtn.forEach((btn) => {
    btn.addEventListener("click", () => {
      if (dialog) {
        dialog.showModal();
      }
    });
  });
</script>
