---
import cntl from "cntl";
import { countryListToJson } from "../../scripts/species_map";

interface Props {
  label: string;
  idx: number; // zero-based index of this item
  length: number; // total number of items in this list
  childCount?: number; // optional, number of children if this is a parent
  lastChild: boolean; // true if this is the last child in the list
  italic?: boolean; // optional, if true, label will be italicized
}
const { label, idx, length, lastChild, childCount, italic } = Astro.props;

const isOnlyChild = length === 1;
const isFirstChild = idx === 0;
const isLastItem = idx === length - 1;

const containerClasses = cntl`
  relative
  ml-2
  pl-2
`;

const itemClasses = cntl`
  inline-block
  bg-spectra-100
  dark:bg-spectra-800
  text-slate-900
  dark:text-slate-100
  rounded-md
  px-2
  relative
  my-1
`;
---

<ul class={containerClasses}>
  <li class="relative pl-3">
    <div class={itemClasses}>
      {
        !lastChild && (
          <button
            id={`toggle-${idx}`}
            class="bg-transparent"
            aria-expanded="false"
            aria-label="Expand"
          >
            +
          </button>
        )
      }
      <span class={italic ? "italic" : ""}>{label}</span>
      {
        !lastChild && childCount && (
          <span class=" text-spicy-mix-500 text-spe text-sm" aria-hidden="true">
            | {childCount}
          </span>
        )
      }
    </div>

    <!-- vertical connector line -->
    {
      !isLastItem && (
        <span
          class="absolute top-3 bottom-[-12px] left-[-10px] w-px bg-slate-300"
          aria-hidden="true"
        />
      )
    }
    {
      (isOnlyChild || isFirstChild) && (
        <span
          class="absolute top-0 h-[12px] left-[-10px] w-px bg-slate-300"
          aria-hidden="true"
        />
      )
    }

    <!-- horizontal connector line -->
    <span
      class="absolute top-3 left-[-10px] w-[16px] h-px bg-slate-300"
      aria-hidden="true"></span>

    <ul id="children" class="ml-4 children" style="display: none;">
      <slot />
    </ul>
  </li>
</ul>

<script>
  const buttons = document.querySelectorAll("button[id^='toggle-']");
  buttons.forEach((btn) => {
    btn.addEventListener("click", () => {
      const li = btn.closest("li");
      if (!li) return;
      const children = li.querySelector(".children") as HTMLElement | null;
      if (!children) return;
      const expanded = btn.getAttribute("aria-expanded") === "true";
      btn.setAttribute("aria-expanded", String(!expanded));
      btn.textContent = expanded ? "+" : "â€“";
      btn.setAttribute("aria-label", expanded ? "Expand" : "Collapse");
      children.style.display = expanded ? "none" : "block";
    });
  });
</script>
