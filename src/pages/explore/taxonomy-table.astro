---
import Title from "../../components/Title.astro";
import MainPage from "../../layouts/MainPage.astro";
import Page from "../../layouts/Page.astro";
import { taxonTableInstance } from "../../scripts/taxon_table.ts";
import type { OrderData } from "../../scripts/taxon_table.ts";

const taxonTable = taxonTableInstance.getTaxonTable();
---

<Page
  title="Taxonomy Table"
  description="A table to display taxonomy information."
>
  <MainPage>
    <div class="text-center item-center mt-8 md:mt-16">
      <Title>Taxonomy Table</Title>
      <div class="text-md text-center mt-4 mb-2 md:mt-8 max-w-4xl mx-auto">
        <p>
          Explore the taxonomy of species listed in the MDD. The table is
          organized by subclass, infraclass, and order, with expandable sections
          for order, families, and genera. Orders are sorted according to the
          phylogenetic hierarchy from the Checklist of the Mammals of the World
          (2020). Click on an order, family, or genus name to expand and view
          more details.
        </p>
      </div>
      <div
        id="taxonomy-table"
        class="overflow-x-auto mx-auto max-w-full max-h-lvh"
      >
        <table class="table-auto my-4 mx-auto">
          <thead class="bg-spectra-100 dark:bg-spectra-900 sticky top-0 z-10">
            <tr>
              <th class="py-2 px-4 border-b rounded-tl-xl text-center"
                >Subclass</th
              >
              <th class="py-2 px-4 border-b text-center">Infraclass</th>
              <th class="py-2 px-4 border-b text-center">Order</th>
              <th class="py-2 px-4 border-b text-center">Families</th>
              <th class="py-2 px-4 border-b text-center">Genera</th>
              <th class="py-2 px-4 border-b text-center">Living species</th>
              <th class="py-2 px-4 border-b rounded-tr-xl text-center"
                >Extinct species (last 500 years)</th
              >
            </tr>
          </thead>
          <tbody>
            {
              Object.values(taxonTable).map((row: OrderData) => (
                <>
                  {/* Order row */}
                  <tr>
                    <td class="py-2 px-4 border-b text-center">
                      {row.subclass}
                    </td>
                    <td class="py-2 px-4 border-b text-center">
                      {row.infraclass}
                    </td>
                    <td class="py-2 px-4 border-b text-center">
                      <button
                        type="button"
                        class="underline text-blue-600 hover:text-blue-800"
                        data-toggle={`order-${row.order}`}
                      >
                        {row.order}
                      </button>
                    </td>
                    <td class="py-2 px-4 border-b text-center">
                      {row.family_count}
                    </td>
                    <td class="py-2 px-4 border-b text-center">
                      {row.genus_count}
                    </td>
                    <td class="py-2 px-4 border-b text-center">
                      {row.living_species_count}
                    </td>
                    <td class="py-2 px-4 border-b text-center">
                      {row.extinct_species_count}
                    </td>
                  </tr>
                  {/* Order expandable: only families */}
                  <tr id={`order-${row.order}`} class="hidden">
                    <td colspan="7" class="p-0 border-0">
                      <table class="table-auto w-full my-2">
                        <tbody>
                          {row.family_list.map((family) => (
                            <>
                              {/* Family row */}
                              <tr>
                                <td class="py-2 px-4 border-b text-center" />
                                <td class="py-2 px-4 border-b text-center" />
                                <td class="py-2 px-4 border-b text-center" />
                                <td class="py-2 border-b text-center">
                                  <button
                                    type="button"
                                    class="underline text-blue-600 hover:text-blue-800"
                                    data-toggle={`family-${row.order}-${family.family}`}
                                  >
                                    {family.family}
                                  </button>
                                </td>
                                <td class="py-2 border-b text-center">
                                  {family.genus_count}
                                </td>
                                <td class="py-2 px-4 border-b text-center">
                                  {family.living_species_count}
                                </td>
                                <td class="py-2 px-4 border-b text-center">
                                  {family.extinct_species_count}
                                </td>
                              </tr>
                              {/* Family expandable: genera */}
                              <tr
                                id={`family-${row.order}-${family.family}`}
                                class="hidden"
                              >
                                <td colspan="7" class="p-0 border-0">
                                  <table class="table-auto w-full my-2">
                                    <tbody>
                                      {family.genera.map((genus) => (
                                        <>
                                          {/* Genus row */}
                                          <tr>
                                            <td class="py-2 px-4 border-b text-center" />
                                            <td class="py-2 px-4 border-b text-center" />
                                            <td class="py-2 px-4 border-b text-center" />
                                            <td class="py-2 px-4 border-b text-center" />
                                            <td class="py-2 px-4 border-b text-center">
                                              <button
                                                type="button"
                                                class="underline text-blue-600 hover:text-blue-800"
                                                data-toggle={`genus-${row.order}-${family.family}-${genus.genus}`}
                                              >
                                                {genus.genus}
                                              </button>
                                            </td>
                                            <td class="py-2 px-4 border-b text-center">
                                              {genus.living_species_count}
                                            </td>
                                            <td class="py-2 px-4 border-b text-center">
                                              {genus.extinct_species_count}
                                            </td>
                                          </tr>
                                          {/* Genus expandable: living species */}
                                          <tr
                                            id={`genus-${row.order}-${family.family}-${genus.genus}`}
                                            class="hidden"
                                          >
                                            <td
                                              colspan="7"
                                              class="p-0 border-0"
                                            >
                                              <table class="table-auto w-full my-2">
                                                <tbody>
                                                  {/* Living species */}
                                                  {genus.species.living_species.map(
                                                    (species: {
                                                      mdd_id: number;
                                                      epithet: string;
                                                    }) => (
                                                      <tr>
                                                        <td class="py-2 px-4 border-b text-center" />
                                                        <td class="py-2 px-4 border-b text-center" />
                                                        <td class="py-2 px-4 border-b text-center" />
                                                        <td class="py-2 px-4 border-b text-center" />
                                                        <td class="py-2 px-4 border-b text-center" />
                                                        <td class="py-2 px-4 border-b text-center">
                                                          <a
                                                            href={`https://www.mammaldiversity.org/taxon/${species.mdd_id}`}
                                                            class="underline text-blue-600 hover:text-blue-800"
                                                            target="_blank"
                                                            rel="noopener noreferrer"
                                                          >
                                                            {species.epithet}
                                                          </a>
                                                        </td>
                                                        <td class="py-2 px-4 border-b text-center" />
                                                      </tr>
                                                    )
                                                  )}
                                                  {/* Extinct species */}
                                                  {genus.species.extinct_species.map(
                                                    (species: {
                                                      mdd_id: number;
                                                      epithet: string;
                                                    }) => (
                                                      <tr>
                                                        <td class="py-2 px-4 border-b text-center" />
                                                        <td class="py-2 px-4 border-b text-center" />
                                                        <td class="py-2 px-4 border-b text-center" />
                                                        <td class="py-2 px-4 border-b text-center" />
                                                        <td class="py-2 px-4 border-b text-center" />
                                                        <td class="py-2 px-4 border-b text-center" />
                                                        <td class="py-2 px-4 border-b text-center">
                                                          <a
                                                            href={`https://www.mammaldiversity.org/taxon/${species.mdd_id}`}
                                                            class="underline text-blue-600 hover:text-blue-800"
                                                            target="_blank"
                                                            rel="noopener noreferrer"
                                                          >
                                                            {species.epithet}
                                                          </a>
                                                        </td>
                                                      </tr>
                                                    )
                                                  )}
                                                </tbody>
                                              </table>
                                            </td>
                                          </tr>
                                        </>
                                      ))}
                                    </tbody>
                                  </table>
                                </td>
                              </tr>
                            </>
                          ))}
                        </tbody>
                      </table>
                    </td>
                  </tr>
                </>
              ))
            }
          </tbody>
        </table>
        <div class="flex justify-start gap-1 max-w-7xl mx-auto">
          <button
            type="button"
            id="collapse-all"
            class="text-md underline text-gray-700 hover:text-gray-900 bg-transparent px-2 -py-1 rounded"
          >
            Collapse all
          </button>
        </div>
      </div>
    </div>
  </MainPage>
</Page>

<script is:inline>
  // Utility to set explicit column widths for both main and nested tables
  function matchColumnWidths(mainRow, nestedTable) {
    const mainCells = mainRow.querySelectorAll("td, th");
    const nestedRows = nestedTable.querySelectorAll("tr");
    if (!nestedRows.length) return;

    // Get the first row of the nested table (header or first data row)
    const nestedCells = nestedRows[0].querySelectorAll("td, th");
    if (mainCells.length !== nestedCells.length) return;

    // Measure and set explicit widths
    const widths = Array.from(mainCells).map((cell) => {
      // Use offsetWidth to get the rendered width
      return cell.offsetWidth + "px";
    });

    mainCells.forEach((cell, i) => {
      cell.style.width = widths[i];
      cell.style.minWidth = widths[i];
      cell.style.maxWidth = widths[i];
    });
    nestedCells.forEach((cell, i) => {
      cell.style.width = widths[i];
      cell.style.minWidth = widths[i];
      cell.style.maxWidth = widths[i];
    });
  }

  document.addEventListener("DOMContentLoaded", () => {
    // Toggle expand/collapse for individual rows
    document.querySelectorAll("[data-toggle]").forEach((btn) => {
      btn.addEventListener("click", () => {
        const targetId = btn.getAttribute("data-toggle");
        const targets = document.querySelectorAll(`#${CSS.escape(targetId)}`);
        targets.forEach((target) => {
          target.classList.toggle("hidden");
          // If opening, match column widths
          if (!target.classList.contains("hidden")) {
            const mainRow = btn.closest("tr");
            const nestedTable = target.querySelector("table");
            if (mainRow && nestedTable) {
              matchColumnWidths(mainRow, nestedTable);
            }
          }
        });
        updateCollapseAllVisibility();
      });
    });

    const collapseAllBtn = document.getElementById("collapse-all");

    function setAllCollapsed() {
      document
        .querySelectorAll("[id^='order-'],[id^='family-'],[id^='genus-']")
        .forEach((row) => {
          row.classList.add("hidden");
        });
      updateCollapseAllVisibility();
    }

    function updateCollapseAllVisibility() {
      // Show collapse button only if at least one expandable row is open
      const anyOpen = Array.from(
        document.querySelectorAll(
          "[id^='order-'],[id^='family-'],[id^='genus-']"
        )
      ).some((row) => !row.classList.contains("hidden"));
      if (collapseAllBtn) {
        collapseAllBtn.style.display = anyOpen ? "" : "none";
      }
    }

    collapseAllBtn?.addEventListener("click", setAllCollapsed);

    // Initial state: hide collapse button
    updateCollapseAllVisibility();
  });
</script>
